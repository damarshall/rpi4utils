#!/bin/bash

which k3sup > /dev/null
OUT=$?

if [ $OUT -eq 1 ];then
	echo "warning: k3sup is not installed. Installing..."

	curl -sLS https://get.k3sup.dev | sh
	sudo install k3sup /usr/local/bin/

	k3sup --help
fi

which kubectl > /dev/null
OUT=$?

if [ $OUT -eq 1 ];then
	echo "warning: kubctl is not installed locally. Installing..."

	sudo apt-get update && sudo apt-get install -y apt-transport-https
	curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
	release=`grep VERSION_CODENAME /etc/os-release | cut -d'=' -f2`
	echo "deb https://apt.kubernetes.io/ kubernetes-$release main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
	sudo apt-get update
	sudo apt-get install -y kubectl
fi

echo "all good. Proceeding..."

# get node names, user account
. ~/.rpicrc

# node number - first node in list will be the cluster master node
let nnum=0

for node in $RPNODES
do
	nodeip=`grep $node /etc/hosts | cut -f1`
	let nnum++
	if [ $nnum -eq 1 ];then
		masterip=$nodeip
		echo "installing k3s on $node as cluster master node..."
		k3sup install --ip $masterip --user $RPUSER --k3s-extra-args '--no-deploy traefik'
		#k3sup install --ip $masterip --user $RPUSER
	else
		echo "installing k3s on $node as a cluster worker node..."
		k3sup join --ip $nodeip --server-ip $masterip --user $RPUSER
	fi
done
sleep 5

# fixup master server IP in kubeconfig
sed -i "s/127.0.0.1/$masterip/g" kubeconfig

printf "Here's your new %d node cluster:\n\n" $nnum
kubectl get node -o wide

echo -e "\nTry running './ktoolsinstall' next"
