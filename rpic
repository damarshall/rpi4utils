#!/bin/bash
#
# Simple wrapper to perform an action on several (or all) nodes in a cluster
#
# You can set defaults in ~/.rpicrc 
# e.g.:  RPNODES="pi1 pi2 pi3"
#
# alternatively you can override and pass in a subset of node names on the command line:
#  	RPNODES="pi3 pi4 pi5" rpic <command>
#
# commands are executed in parallel across all nodes at once
#
. ~/.rpicrc

outf=/tmp/rpic.out
rm $outf 2> /dev/null

# run $cmd in parallel across $RPNODES
pssh() {
	#echo "executing '$cmd' across cluster..."
	let i=0
	for node in $RPNODES
	do
		echo "$node:" `timeout -k $RPTIMEOUT $RPTIMEOUT ssh -l $RPUSER $node $cmd 2>&1` >> $outf &
		pids[i]=$!
		let i++
	done
	catout
}

# run the script in $2 in parallel acros $RPNODES
rexec() {
	#echo "executing '$assu $2' across cluster..."
	let i=0
	for node in $RPNODES
	do
		echo "$node:" `timeout -k $RPTIMEOUT $RPTIMEOUT ssh -l $RPUSER $node $assu /bin/bash 2>&1 < $2` &>> $outf &
		pids[i]=$!
		let i++
	done
	catout
}

# wait for background ssh cmd to complete on each node
# and write output to $outf
# Once all jobs finish, write sorted output from $outf to stdout
catout() {
	for pid in ${pids[*]}
	do
		wait $pid
	done
	cat $outf | sort
}

rhelp() {
	printf "Usage: rpic <command> (options)\n"
    printf "\nexec: 'rpic exec scriptfile' runs local scriptfile per node\n"
    printf "\tload: shows load average per node\n"
    printf "\tmac: shows MAC address for eth0 on each node\n"
    printf "\trun: 'rpic run command line' runs 'command line' via ssh per node\n"
    printf "\tshutdown: shuts down all nodes\n"
    printf "\nsuexec: 'rpic suexec scriptfile' runs local scriptfile as su per node\n"
    printf "\ttemp: shows temperature per node\n"
}

case "$1" in
  	exec)
		assu=""
		rexec $@
		;;
	help)
    	rhelp
    	;;
  	load)
		cmd="cat /proc/loadavg"
		pssh
    	;;
	mac)
		cmd="ifconfig eth0 | grep ether | cut -d' ' -f10"
		pssh
		;;
	run)
		shift
		cmd=$@
		pssh
		;;
  	shutdown)
		cmd="sudo shutdown -h now"
    	pssh
    	;;
	suexec)
		assu="sudo"
		rexec $@
		;;
  	temp)
		cmd="vcgencmd measure_temp"
		pssh
    	;;
  	*)
    	rhelp
    	exit 1
esac
