#!/bin/bash

. ~/.rpicrc

# we'll need the OpenFaaS CLI. If it's not here, install it
which faas-cli > /dev/null
OUT=$?
if [ $OUT -eq 1 ];then
	echo "installing openfaas-cli..."
	curl -sL https://cli.openfaas.com | sudo sh
fi

echo "ready to install OpenFaaS"
kubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml
helm repo add openfaas https://openfaas.github.io/faas-netes/

# if we want load-balancer and ingress make sure these options are uncommented
OPTIONS=""
OPTIONS=$OPTIONS" --set serviceType=LoadBalancer"
OPTIONS=$OPTIONS" --set ingress.enabled=true"
OPTIONS=$OPTIONS" --set faasnetes.httpProbe=true"
OPTIONS=$OPTIONS" --set queueWorker.replicas=2"
OPTIONS=$OPTIONS" --set nats.enableMontitoring=true"

# generate a random password
# drop into a creds file so we don't lose track of it.

if [ -z $OFPASSWD ]
then
	OFPASSWD=$(head -c 12 /dev/urandom | shasum | cut -d' ' -f1)
	OFUSER="admin"
	echo $OFUSER/$OFPASSWD > ofcreds.txt
fi
kubectl -n openfaas create secret generic basic-auth --from-literal=basic-auth-user="$OFUSER" --from-literal=basic-auth-password="$OFPASSWD"
helm repo update
helm upgrade -f conf/openfaas/values.yaml -f conf/openfaas/values-arm64.yaml openfaas --install openfaas/openfaas --namespace openfaas --set basic_auth=true --set functionNamespace=openfaas-fn $OPTIONS

# ...and install a cert-manager
#kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.10/deploy/manifests/00-crds.yaml
#kubectl create namespace cert-manager
#kubectl label namespace cert-manager certmanager.k8s.io/disable-validation=true
#helm repo add jetstack https://charts.jetstack.io
#helm repo update
#helm install --name cert-manager --namespace cert-manager --version v0.10.0 jetstack/cert-manager
