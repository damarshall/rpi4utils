#!/bin/bash

#install kubectl

# metrics-server (slightly tuned config for arm64)
echo "deploying metrics-server..."
kubectl create -f conf/metrics-server/

# standard k8s dashboard
echo -e "\n\ndeploying kubernetes dashboard..."
kubectl apply -f conf/dashboard/arm64deployment.yaml
# TODO: need to create a user and bearer token

# we're going to use metallb as a load-balancer with a simple layer-2 config
echo -e "\n\ndeploying metallb load-balancer in layer 2 mode"
kubectl apply -f conf/metallb/metallb.yaml
kubectl apply -f conf/metallb/config.yaml

# ingress-nginx
# we'll use this rather than Traefik as it's mainstream and easier to config
echo -e "\n\ndeploying nginx-ingress-controller..."
kubectl apply -f conf/ingress-nginx/mandatory.yaml
kubectl apply -f conf/ingress-nginx/service-loadbalancer.yaml

# linkerd2
echo -e "\n\ndeploying linkerd2 service mesh..."
kubectl apply -f conf/linkerd/

# we're going to do a helm chart install. Check if helm is here, if not, install
which helm > /dev/null
OUT=$?

if [ $OUT -eq 1 ];then
	curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
fi

# arm64/aarch64 is not supported on official builds, we'll use a multi-arch rebuild
echo -e "\n\ndeploying tiller..."
kubectl -n kube-system create sa tiller
kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
helm init --tiller-image=jessestuart/tiller --skip-refresh --upgrade --service-account tiller

echo -e "\nuse 'kubectl get pod -n kube-system' to check tiller readiness"
kubectl get pod -n kube-system -o wide
echo -e "\nand use 'kubectl get pod -n linkerd' to check linkerd readiness"
kubectl get pod -n linkerd -o wide

echo -e "\nEnsure both tiller and linkerd are deployed and ready, then try './ofinstall' next"
